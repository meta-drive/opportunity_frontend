[{"/home/allan/www/hackathon/opportunity_frontend/src/index.tsx":"1","/home/allan/www/hackathon/opportunity_frontend/src/routes/index.tsx":"2","/home/allan/www/hackathon/opportunity_frontend/src/routes/Route.tsx":"3","/home/allan/www/hackathon/opportunity_frontend/src/pages/Sessions/login.tsx":"4","/home/allan/www/hackathon/opportunity_frontend/src/pages/Users/Create/styles.ts":"5","/home/allan/www/hackathon/opportunity_frontend/src/pages/Home/index.tsx":"6","/home/allan/www/hackathon/opportunity_frontend/src/pages/Home/styles.ts":"7","/home/allan/www/hackathon/opportunity_frontend/src/components/PersonalInfo/index.tsx":"8","/home/allan/www/hackathon/opportunity_frontend/src/context/AuthContext.tsx":"9","/home/allan/www/hackathon/opportunity_frontend/src/components/PersonalInfo/styles.ts":"10","/home/allan/www/hackathon/opportunity_frontend/src/components/ComplementaryInfo/styles.ts":"11","/home/allan/www/hackathon/opportunity_frontend/src/components/ComplementaryInfo/index.tsx":"12","/home/allan/www/hackathon/opportunity_frontend/src/components/Interest/index.tsx":"13","/home/allan/www/hackathon/opportunity_frontend/src/components/Interest/styles.ts":"14","/home/allan/www/hackathon/opportunity_frontend/src/components/Academic/styles.ts":"15","/home/allan/www/hackathon/opportunity_frontend/src/components/Academic/index.tsx":"16","/home/allan/www/hackathon/opportunity_frontend/src/components/Experience/styles.ts":"17","/home/allan/www/hackathon/opportunity_frontend/src/components/Experience/index.tsx":"18"},{"size":197,"mtime":1610800407669,"results":"19","hashOfConfig":"20"},{"size":644,"mtime":1610804233716,"results":"21","hashOfConfig":"20"},{"size":778,"mtime":1610802133642,"results":"22","hashOfConfig":"20"},{"size":1045,"mtime":1610807527542,"results":"23","hashOfConfig":"20"},{"size":164,"mtime":1610800407669,"results":"24","hashOfConfig":"20"},{"size":834,"mtime":1610809648245,"results":"25","hashOfConfig":"20"},{"size":643,"mtime":1610809340910,"results":"26","hashOfConfig":"20"},{"size":685,"mtime":1610809683338,"results":"27","hashOfConfig":"20"},{"size":2132,"mtime":1610811463213,"results":"28","hashOfConfig":"20"},{"size":282,"mtime":1610809275925,"results":"29","hashOfConfig":"20"},{"size":410,"mtime":1610817852965,"results":"30","hashOfConfig":"20"},{"size":579,"mtime":1610817129306,"results":"31","hashOfConfig":"20"},{"size":1050,"mtime":1610817414811,"results":"32","hashOfConfig":"20"},{"size":181,"mtime":1610817434370,"results":"33","hashOfConfig":"20"},{"size":182,"mtime":1610817264356,"results":"34","hashOfConfig":"20"},{"size":1847,"mtime":1610817270212,"results":"35","hashOfConfig":"20"},{"size":184,"mtime":1610817312292,"results":"36","hashOfConfig":"20"},{"size":1416,"mtime":1610817749162,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4e7xgs",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"/home/allan/www/hackathon/opportunity_frontend/src/index.tsx",[],"/home/allan/www/hackathon/opportunity_frontend/src/routes/index.tsx",[],"/home/allan/www/hackathon/opportunity_frontend/src/routes/Route.tsx",[],"/home/allan/www/hackathon/opportunity_frontend/src/pages/Sessions/login.tsx",[],"/home/allan/www/hackathon/opportunity_frontend/src/pages/Users/Create/styles.ts",[],"/home/allan/www/hackathon/opportunity_frontend/src/pages/Home/index.tsx",[],"/home/allan/www/hackathon/opportunity_frontend/src/pages/Home/styles.ts",[],"/home/allan/www/hackathon/opportunity_frontend/src/components/PersonalInfo/index.tsx",[],"/home/allan/www/hackathon/opportunity_frontend/src/context/AuthContext.tsx",[],"/home/allan/www/hackathon/opportunity_frontend/src/components/PersonalInfo/styles.ts",[],"/home/allan/www/hackathon/opportunity_frontend/src/components/ComplementaryInfo/styles.ts",[],"/home/allan/www/hackathon/opportunity_frontend/src/components/ComplementaryInfo/index.tsx",["76"],"/home/allan/www/hackathon/opportunity_frontend/src/components/Interest/index.tsx",["77"],"import React, {useEffect, useState} from 'react';\n\nimport { useAuth } from  '../../context/AuthContext';\n\nimport { InterestContainer } from './styles';\nimport api from '../../services/api';\n\n\n\nconst Interest: React.FC = () => {\n\n  interface InterestInterface {\n    id: number,\n    occupation: String,\n    max_salary: number,\n    min_salary: number,\n  }\n  \n  const { user, token } = useAuth();\n  const [interests, setInterests] = useState<InterestInterface[]>([]);\n\n  useEffect(() => {\n    api.get(`/users/${user.id}/interests`, {headers: {Authorization: `Bearer ${token}`}})\n    .then((interests) => {\n      setInterests(interests.data)\n    })\n    .catch(err => {})\n\n  }, []);\n\n  return (\n    <>\n      <h3>Objetivos Profissional </h3>\n      <InterestContainer>\n      {interests.map(interest => (\n        <div key={interest.id}>\n          <p><b>{interest.occupation}</b></p>\n          <p>Salário: {interest.max_salary} - {interest.min_salary}</p>\n          <hr/>\n        </div>))}\n        </InterestContainer>\n    </>\n  );\n}\n\nexport default Interest;","/home/allan/www/hackathon/opportunity_frontend/src/components/Interest/styles.ts",[],"/home/allan/www/hackathon/opportunity_frontend/src/components/Academic/styles.ts",[],"/home/allan/www/hackathon/opportunity_frontend/src/components/Academic/index.tsx",["78"],"/home/allan/www/hackathon/opportunity_frontend/src/components/Experience/styles.ts",[],"/home/allan/www/hackathon/opportunity_frontend/src/components/Experience/index.tsx",["79"],"import React, {useEffect, useState} from 'react';\n\nimport { useAuth } from  '../../context/AuthContext';\n\nimport { ExperienceContainer } from './styles';\nimport api from '../../services/api';\n\n\n\nconst Experience: React.FC = () => {\n\n  interface ExperienceInterface {\n    id: number,\n    activities: string,\n    company_name: string,\n    entry_date: string,\n    final_date?: string,\n    modality: string,\n    occupation: string,\n  }\n\n  const { user, token } = useAuth();\n  const [experiences, setExperiences] = useState<ExperienceInterface[]>([]);\n\n  useEffect(() => {\n    api.get(`/users/${user.id}/experiences`, {headers: {Authorization: `Bearer ${token}`}})\n    .then((expriences) => {\n      setExperiences(expriences.data)\n      console.log(expriences.data);\n    })\n    .catch(err => {})\n\n  }, []);\n\n  return (\n    <ExperienceContainer>\n      <div>\n      <h3>Experiência Profissional: </h3>\n      {experiences.map(experience => (\n        <div key={experience.id}>\n          <p><b>Empresa: </b>{experience.company_name}</p>\n          <p><b>Cargo: </b>{experience.occupation}</p>\n          <p><b>Data de Início: </b>{experience.entry_date}</p>\n          <p><b>Data Fim: </b>{experience.final_date}</p>\n          <p><b>Modalidade: </b>{experience.modality}</p>\n          <p><b>Atividades: </b>{experience.activities}</p>\n        </div>))}\n      </div>\n\n    </ExperienceContainer>\n  );\n}\n\nexport default Experience;",{"ruleId":"80","severity":1,"message":"81","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":35},{"ruleId":"84","severity":1,"message":"85","line":29,"column":6,"nodeType":"86","endLine":29,"endColumn":8,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"85","line":44,"column":6,"nodeType":"86","endLine":44,"endColumn":8,"suggestions":"88"},{"ruleId":"84","severity":1,"message":"85","line":33,"column":6,"nodeType":"86","endLine":33,"endColumn":8,"suggestions":"89"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["90"],["91"],["92"],{"desc":"93","fix":"94"},{"desc":"93","fix":"95"},{"desc":"93","fix":"96"},"Update the dependencies array to be: [token, user.id]",{"range":"97","text":"98"},{"range":"99","text":"98"},{"range":"100","text":"98"},[672,674],"[token, user.id]",[1074,1076],[797,799]]