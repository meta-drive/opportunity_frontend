[{"/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/pages/Sessions/login.tsx":"1","/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/components/ExtraInfo/styles.ts":"2","/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/components/Experience/index.tsx":"3","/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/routes/index.tsx":"4","/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/pages/Users/Create/index.tsx":"5","/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/styles/global.ts":"6","/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/pages/Sessions/styles.ts":"7","/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/context/AuthContext.tsx":"8"},{"size":1211,"mtime":1610840598811,"results":"9","hashOfConfig":"10"},{"size":410,"mtime":1610823211992,"results":"11","hashOfConfig":"10"},{"size":1380,"mtime":1610823211988,"results":"12","hashOfConfig":"10"},{"size":644,"mtime":1610823407493,"results":"13","hashOfConfig":"10"},{"size":2605,"mtime":1610842362960,"results":"14","hashOfConfig":"10"},{"size":1046,"mtime":1610844367660,"results":"15","hashOfConfig":"10"},{"size":574,"mtime":1610844230388,"results":"16","hashOfConfig":"10"},{"size":2154,"mtime":1610840104514,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1ml5m1a",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/pages/Sessions/login.tsx",["36"],"import React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { useAuth } from '../../context/AuthContext';\n\nimport { Form, FormContainer } from '../../styles/global';\nimport { LoginContainer, ActionButton } from './styles';\n\ninterface FormFields {\n  email: string;\n  password: string;\n}\n\nconst Login: React.FC = () => {\n  const { register, handleSubmit } = useForm();\n  const history = useHistory();\n  const { signIn } = useAuth();\n\n  const handleLogin: SubmitHandler<FormFields> = async (credentials) => {\n    if (await signIn(credentials))\n      history.push('homepage');\n  }\n\n  return (\n    <LoginContainer>\n      <FormContainer>\n        <h2>Entrar</h2>\n        <Form onSubmit={handleSubmit(handleLogin)}>\n          <input ref={register} name=\"email\" placeholder=\"Digite seu e-mail\" type=\"email\" />\n          <input ref={register} name=\"password\" placeholder=\"Digite sua senha\" type=\"password\" />\n\n          <button type=\"submit\" className=\"btn-primary\">Entrar</button>\n        </Form>\n      </FormContainer>\n      <ActionButton to=\"/cadastro\">Cadastre-se</ActionButton>\n    </LoginContainer>\n  );\n}\n\nexport default Login;\n","/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/components/ExtraInfo/styles.ts",[],"/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/components/Experience/index.tsx",["37"],"/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/routes/index.tsx",[],"/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/pages/Users/Create/index.tsx",["38"],"import React from 'react';\nimport { useForm, SubmitHandler, Controller } from 'react-hook-form';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport ReactDatePicker, { registerLocale, setDefaultLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ptBR from 'date-fns/locale/pt-BR';\n\nimport { Form, FormContainer } from '../../../styles/global';\n\nimport api from '../../../services/api';\n\nregisterLocale('pt-BR', ptBR);\n\ninterface User {\n  username: string;\n  email: string;\n  password: string;\n  birth_date: string;\n  description: string;\n  phone: string;\n  genre: string;\n  marital_status: string;\n}\n\nconst CreateUser: React.FC = () => {\n  const { register, control, handleSubmit } = useForm();\n  const history = useHistory();\n\n  const handleSignup: SubmitHandler<User> = async (data) => {\n    try {\n      await api.post('users', data);\n      \n      alert('Cadastro realizado com sucesso');\n      history.push('/login');\n    } catch (err) {\n      alert(err.response.data.message);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h2>Cadastre-se</h2>\n      <Form onSubmit={handleSubmit(handleSignup)}>\n        <input\n          name=\"username\"\n          ref={register}\n          placeholder=\"Nome Completo\"\n        />\n        <input\n          name=\"email\"\n          type=\"email\"\n          ref={register}\n          placeholder=\"Digite o seu e-mail\"\n        />\n        <Controller\n          name=\"birth_date\"\n          control={control}\n          render={({ onChange, value }) => (\n            <ReactDatePicker \n              selected={value}\n              onChange={onChange}\n              locale='pt-BR'\n              dateFormat='dd/MM/yyyy'\n              placeholderText='Data de Nascimento'\n            />\n          )}\n        />\n        <input\n          name=\"phone\"\n          ref={register}\n          placeholder=\"Telefone\"\n        />\n        <input\n          name=\"genre\"\n          ref={register}\n          placeholder=\"Informe seu gênero\"\n        />\n        <input\n          name=\"marital_status\"\n          ref={register}\n          placeholder=\"Informe seu status civil\"\n        />\n        <textarea\n          name=\"description\"\n          ref={register}\n          placeholder=\"Nos fale sobre você\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          ref={register}\n          placeholder=\"Digite sua senha\"\n        />\n\n        <button type=\"submit\" className=\"btn-primary\">Cadastrar</button>\n      </Form>\n      <Link to=\"/login\">Voltar para o login</Link>\n    </FormContainer>\n  );\n}\n\nexport default CreateUser;\n","/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/styles/global.ts",[],"/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/pages/Sessions/styles.ts",[],"/home/kalllebe/Documentos/metadrive/ccr-hackathon/opportunity-frontend/src/context/AuthContext.tsx",[],{"ruleId":"39","severity":1,"message":"40","line":3,"column":10,"nodeType":"41","messageId":"42","endLine":3,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":32,"column":6,"nodeType":"45","endLine":32,"endColumn":8,"suggestions":"46"},{"ruleId":"39","severity":1,"message":"47","line":5,"column":43,"nodeType":"41","messageId":"42","endLine":5,"endColumn":59},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["48"],"'setDefaultLocale' is defined but never used.",{"desc":"49","fix":"50"},"Update the dependencies array to be: [token, user.id]",{"range":"51","text":"52"},[761,763],"[token, user.id]"]